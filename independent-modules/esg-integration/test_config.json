{
  "test_suites": {
    "unit_tests": {
      "name": "Unit Tests",
      "description": "Individual module functionality tests",
      "timeout": 300,
      "parallel": true,
      "modules": [
        "risk-interest-rate",
        "risk-credit", 
        "risk-equity",
        "risk-foreign-exchange",
        "risk-inflation",
        "risk-liquidity",
        "risk-counterparty",
        "api-gateway",
        "aggregation-engine",
        "monitoring-dashboard",
        "web-frontend",
        "ai-gateway"
      ]
    },
    "workflow_tests": {
      "name": "Workflow Tests",
      "description": "End-to-end workflow integration tests",
      "timeout": 600,
      "parallel": false,
      "workflows": [
        "risk_analysis_workflow",
        "data_processing_workflow",
        "ai_analysis_workflow"
      ]
    },
    "performance_tests": {
      "name": "Performance Tests",
      "description": "Performance and scalability tests",
      "timeout": 900,
      "parallel": true,
      "thresholds": {
        "max_response_time": 1.0,
        "min_throughput": 100,
        "max_memory_usage": 1024,
        "max_cpu_usage": 80.0,
        "max_error_rate": 0.01
      }
    },
    "api_tests": {
      "name": "API Tests",
      "description": "API integration and endpoint tests",
      "timeout": 300,
      "parallel": true,
      "endpoints": [
        {
          "module": "api-gateway",
          "endpoint": "/health",
          "method": "GET",
          "expected_status": 200
        },
        {
          "module": "ai-gateway",
          "endpoint": "/models",
          "method": "GET",
          "expected_status": 200
        },
        {
          "module": "monitoring-dashboard",
          "endpoint": "/metrics",
          "method": "GET",
          "expected_status": 200
        }
      ]
    }
  },
  "module_configs": {
    "risk-interest-rate": {
      "test_parameters": {
        "alpha": 0.1,
        "sigma": 0.02,
        "initial_rate": 0.05,
        "time_steps": 100
      },
      "expected_outputs": {
        "rate_path": "array",
        "volatility": "float",
        "mean_reversion": "float"
      }
    },
    "risk-credit": {
      "test_parameters": {
        "asset_value": 1000000,
        "debt_value": 800000,
        "volatility": 0.3,
        "risk_free_rate": 0.05
      },
      "expected_outputs": {
        "default_probability": "float",
        "credit_spread": "float",
        "distance_to_default": "float"
      }
    },
    "risk-equity": {
      "test_parameters": {
        "initial_price": 100,
        "drift": 0.05,
        "volatility": 0.2,
        "time_steps": 252
      },
      "expected_outputs": {
        "price_path": "array",
        "volatility": "float",
        "returns": "array"
      }
    },
    "risk-foreign-exchange": {
      "test_parameters": {
        "initial_rate": 1.2,
        "drift": 0.02,
        "volatility": 0.15,
        "time_steps": 100
      },
      "expected_outputs": {
        "rate_path": "array",
        "volatility": "float",
        "correlation": "float"
      }
    },
    "risk-inflation": {
      "test_parameters": {
        "initial_rate": 0.02,
        "mean_reversion": 0.03,
        "volatility": 0.01,
        "time_steps": 100
      },
      "expected_outputs": {
        "inflation_path": "array",
        "mean_reversion_speed": "float",
        "long_term_mean": "float"
      }
    },
    "risk-liquidity": {
      "test_parameters": {
        "cash_flows": [100000, 150000, 200000],
        "shortfall_threshold": 50000,
        "liquidity_buffer": 100000
      },
      "expected_outputs": {
        "liquidity_ratio": "float",
        "shortfall_probability": "float",
        "buffer_adequacy": "boolean"
      }
    },
    "risk-counterparty": {
      "test_parameters": {
        "exposure_limit": 1000000,
        "current_exposure": 750000,
        "credit_rating": "A",
        "collateral_value": 200000
      },
      "expected_outputs": {
        "exposure_ratio": "float",
        "credit_risk": "float",
        "collateral_coverage": "float"
      }
    }
  },
  "integration_scenarios": {
    "full_risk_analysis": {
      "description": "Complete risk analysis workflow",
      "steps": [
        "data_preprocessing",
        "interest_rate_risk",
        "credit_risk",
        "equity_risk",
        "fx_risk",
        "inflation_risk",
        "liquidity_risk",
        "counterparty_risk",
        "risk_aggregation",
        "ai_analysis",
        "monitoring_update"
      ],
      "expected_duration": 30,
      "success_criteria": {
        "all_models_execute": true,
        "aggregation_completes": true,
        "ai_insights_generated": true,
        "monitoring_updated": true
      }
    },
    "ai_gateway_integration": {
      "description": "AI Gateway with risk models",
      "steps": [
        "ai_gateway_startup",
        "model_registration",
        "risk_model_integration",
        "request_processing",
        "response_generation"
      ],
      "expected_duration": 15,
      "success_criteria": {
        "gateway_responds": true,
        "models_available": true,
        "requests_processed": true
      }
    }
  },
  "performance_benchmarks": {
    "single_model_execution": {
      "max_duration": 5.0,
      "max_memory": 512,
      "max_cpu": 50.0
    },
    "full_workflow": {
      "max_duration": 60.0,
      "max_memory": 2048,
      "max_cpu": 80.0
    },
    "concurrent_requests": {
      "max_response_time": 2.0,
      "min_throughput": 50,
      "max_error_rate": 0.01
    }
  },
  "test_environment": {
    "python_version": "3.8+",
    "required_packages": [
      "numpy",
      "pandas",
      "scipy",
      "fastapi",
      "uvicorn",
      "celery",
      "redis"
    ],
    "optional_packages": [
      "matplotlib",
      "seaborn",
      "plotly"
    ]
  }
} 