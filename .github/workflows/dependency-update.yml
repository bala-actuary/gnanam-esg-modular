name: Dependency Updates

on:
  schedule:
    # Run dependency updates weekly on Sundays at 3 AM UTC
    - cron: '0 3 * * 0'
  workflow_dispatch:

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install update tools
        run: |
          # Python dependency update tools
          pip install pip-tools pipdeptree
          
          # Node.js dependency update tools
          npm install -g npm-check-updates

      - name: Update Python dependencies
        run: |
          echo "Updating Python dependencies..."
          
          # Find all requirements files
          find . -name "requirements.txt" -o -name "pyproject.toml" | while read file; do
            echo "Processing: $file"
            dir=$(dirname "$file")
            cd "$dir"
            
            if [ -f "requirements.txt" ]; then
              # Update requirements.txt
              pip-compile --upgrade requirements.txt
            fi
            
            if [ -f "pyproject.toml" ]; then
              # Update pyproject.toml dependencies
              echo "Manual review needed for pyproject.toml: $file"
            fi
            
            cd - > /dev/null
          done

      - name: Update Node.js dependencies
        run: |
          echo "Updating Node.js dependencies..."
          
          # Update root package.json
          ncu --upgrade
          
          # Update workspace packages
          find repositories/ -name "package.json" | while read file; do
            echo "Processing: $file"
            dir=$(dirname "$file")
            cd "$dir"
            ncu --upgrade
            cd - > /dev/null
          done

      - name: Check for updates
        id: check_updates
        run: |
          # Check if any files were modified
          if git diff --quiet; then
            echo "has_updates=false" >> $GITHUB_OUTPUT
            echo "No dependency updates found"
          else
            echo "has_updates=true" >> $GITHUB_OUTPUT
            echo "Dependency updates found"
            git diff --name-only
          fi

      - name: Create Pull Request
        if: steps.check_updates.outputs.has_updates == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: 'ðŸ¤– Automated Dependency Updates'
          body: |
            ## Automated Dependency Updates
            
            This PR contains automated updates to dependencies across the ESG platform.
            
            ### Changes Made:
            - Updated Python dependencies
            - Updated Node.js dependencies
            
            ### Testing Required:
            - [ ] Run integration tests
            - [ ] Verify all modules build successfully
            - [ ] Check for breaking changes
            
            ### Review Checklist:
            - [ ] Review dependency changes
            - [ ] Verify compatibility
            - [ ] Test critical functionality
            - [ ] Approve for merge
            
            ---
            *This PR was automatically generated by the dependency update workflow.*
          branch: dependency-updates
          delete-branch: true
          labels: |
            dependencies
            automated
            needs-review

  security-audit:
    name: Security Audit After Updates
    runs-on: ubuntu-latest
    needs: update-dependencies
    if: needs.update-dependencies.outputs.has_updates == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm ci
          pip install -r integration-tests/requirements.txt

      - name: Run security audit
        run: |
          # Python security audit
          safety check --json --output safety-results.json || true
          
          # Node.js security audit
          npm audit --audit-level moderate --json > npm-audit-results.json || true

      - name: Upload security audit results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-audit-results
          path: |
            safety-results.json
            npm-audit-results.json
          retention-days: 30

      - name: Comment on PR
        if: needs.update-dependencies.outputs.has_updates == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            let comment = '## Security Audit Results\n\n';
            
            if (fs.existsSync('safety-results.json')) {
              const safetyData = JSON.parse(fs.readFileSync('safety-results.json', 'utf8'));
              comment += `### Python Security Issues: ${safetyData.length}\n`;
            }
            
            if (fs.existsSync('npm-audit-results.json')) {
              const npmData = JSON.parse(fs.readFileSync('npm-audit-results.json', 'utf8'));
              const vulns = npmData.metadata?.vulnerabilities?.total || 0;
              comment += `### NPM Security Issues: ${vulns}\n`;
            }
            
            comment += '\nPlease review these results before merging the dependency updates.';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            }); 