name: Security Scanning

on:
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  security-scan:
    name: Comprehensive Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install security tools
        run: |
          # Python security tools
          pip install bandit safety pip-audit
          
          # Node.js security tools
          npm install -g audit-ci npm-audit-resolver

      - name: Run Bandit security scan
        run: |
          bandit -r repositories/ -f json -o bandit-results.json || true
          bandit -r shared-libraries/ -f json -o bandit-shared-results.json || true

      - name: Run Safety check
        run: |
          safety check --json --output safety-results.json || true

      - name: Run pip-audit
        run: |
          pip-audit --format json --output pip-audit-results.json || true

      - name: Run npm audit
        run: |
          npm audit --audit-level moderate --json > npm-audit-results.json || true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Run OWASP ZAP scan
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          target: 'http://localhost:8000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

      - name: Upload security scan results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-scan-results-${{ github.run_number }}
          path: |
            bandit-results.json
            bandit-shared-results.json
            safety-results.json
            pip-audit-results.json
            npm-audit-results.json
            trivy-results.sarif
          retention-days: 90

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Generate security report
        run: |
          echo "## Security Scan Report" > security-report.md
          echo "Generated: $(date)" >> security-report.md
          echo "" >> security-report.md
          
          if [ -f "bandit-results.json" ]; then
            echo "### Bandit Results" >> security-report.md
            python -c "
            import json
            with open('bandit-results.json', 'r') as f:
                data = json.load(f)
            print(f'Total issues: {len(data.get(\"results\", []))}')
            " >> security-report.md
          fi
          
          if [ -f "npm-audit-results.json" ]; then
            echo "### NPM Audit Results" >> security-report.md
            python -c "
            import json
            with open('npm-audit-results.json', 'r') as f:
                data = json.load(f)
            print(f'Vulnerabilities: {data.get(\"metadata\", {}).get(\"vulnerabilities\", {}).get(\"total\", 0)}')
            " >> security-report.md
          fi

      - name: Upload security report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-report-${{ github.run_number }}
          path: security-report.md
          retention-days: 90 